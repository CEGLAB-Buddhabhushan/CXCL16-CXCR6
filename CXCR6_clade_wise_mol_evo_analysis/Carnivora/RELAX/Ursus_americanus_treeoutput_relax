[2J[H            /HYPHY 2.5.48(MP) for Linux on x86_64\            
***************** TYPES OF STANDARD ANALYSES *****************


	(1) Selection Analyses
	(2) Evolutionary Hypothesis Testing
	(3) Relative evolutionary rate inference
	(4) Coevolutionary analysis
	(5) Basic Analyses
	(6) Codon Selection Analyses
	(7) Compartmentalization
	(8) Data File Tools
	(9) Miscellaneous
	(10) Model Comparison
	(11) Molecular Clock
	(12) Phylogeny Reconstruction
	(13) Positive Selection
	(14) Recombination
	(15) Selection/Recombination
	(16) Relative Rate
	(17) Relative Ratio

 Please select type of analyses you want to list (or press ENTER to process custom batch file):[2J[H***************** FILES IN 'Selection Analyses' ***************** 


	(1) [MEME] Test for episodic site-level selection using MEME (Mixed Effects Model of Evolution).
	(2) [FEL] Test for pervasive site-level selection using FEL (Fixed Effects Likelihood).
	(3) [SLAC] Test for pervasive site-level selection using SLAC (Single Likelihood Ancestor Counting).
	(4) [FUBAR] Test for pervasive site-level selection using FUBAR (Fast Unconstrained Bayesian AppRoximation for inferring selection).
	(5) [BUSTED] Test for episodic gene-wide selection using BUSTED (Branch-site Unrestricted Statistical Test of Episodic Diversification).
	(6) [aBSREL] Test for lineage-specific evolution using the branch-site method aBS-REL (Adaptive Branch-Site Random Effects Likelihood).
	(7) [RELAX] Test for relaxation of selection pressure along a specified set of test branches using RELAX (a random effects test of selection relaxation).
	(8) [FADE] Test a protein alignment for directional selection towards specific amino acids along a specified set of test branches using FADE (a FUBAR Approach to Directional Evolution).
	(9) [PRIME] 

 Please select the analysis you would like to perform (or press ENTER to return to the list of analysis types):
Analysis Description
--------------------
RELAX (a random effects test of selection relaxation) uses a random
effects branch-site model framework to test whether a set of 'Test'
branches evolves under relaxed selection relative to a set of
'Reference' branches (R), as measured by the relaxation parameter (K).
Version 2.1 adds a check for stability in K estimates to try to mitigate
convergence problems. Version 3 provides support for >2 branch sets.
Version 3.1 adds LHC + Nedler-Mead initial fit phase and keyword
support. Version 3.1.1 adds some bug fixes for better convergence.
Version 4.0 adds support for synonymous rate variation. Version 4.1 adds
further support for multiple hit models

- __Requirements__: in-frame codon alignment and a phylogenetic tree, with at least two
groups of branches defined using the {} notation (one group can be
defined as all unlabeled branches)

- __Citation__: RELAX: Detecting Relaxed Selection in a Phylogenetic Framework (2015).
Mol Biol Evol 32 (3): 820-832

- __Written by__: Sergei L Kosakovsky Pond, Ben Murrell, Steven Weaver and Temple iGEM /
UCSD viral evolution g

- __Contact Information__: spond@temple.edu

- __Analysis Version__: 3.1.1


>code â€“> Universal


>Select a coding sequence alignment file (`/media/morpheus/sagar/BUDDHA/CXCR6/Mol_evo_ana/clade_wise_Mol_evo_ana/Carnivora/RELAX/`) 

>Select a coding sequence alignment file (`/media/morpheus/sagar/BUDDHA/CXCR6/Mol_evo_ana/clade_wise_Mol_evo_ana/Carnivora/RELAX/`) 
-------
>[WARNING] This dataset contains 1 duplicate sequence. Identical
sequences do not contribute any information to the analysis and only
slow down computation. Please consider removing duplicate or 'nearly'
duplicate sequences, e.g. using
https://github.com/veg/hyphy-analyses/tree/master/remove-duplicates
prior to running selection analyses
-------


>Please select a tree file for the data: (`/media/morpheus/sagar/BUDDHA/CXCR6/Mol_evo_ana/clade_wise_Mol_evo_ana/Carnivora/RELAX/`) /media/morpheus/sagar/BUDDHA/CXCR6/Mol_evo_ana/clade_wise_Mol_evo_ana/Carnivora/RELAX/Ursus_americanus_treeLabled.txt
/media/morpheus/sagar/BUDDHA/CXCR6/Mol_evo_ana/clade_wise_Mol_evo_ana/Carnivora/RELAX/Ursus_americanus_treeLabled.txt

>Loaded a multiple sequence alignment with **42** sequences, **453** codons, and **1** partitions from `/media/morpheus/sagar/BUDDHA/CXCR6/Mol_evo_ana/clade_wise_Mol_evo_ana/Carnivora/RELAX/Carnivora.aln`


####Choose the set of branches to use as the _test_ set

1. [**Unlabeled branches**] Set of 80 unlabeled branches
2. [**fg**] Set fg with 1 branches

>Please choose an option (or press q to cancel selection):The number of points in the initial distributional guess for likelihood fitting (permissible range = [1,10000], default value = 250, integer): 
>grid-size â€“> 250
The number of initial random guesses to 'seed' rate values optimization (permissible range = [1,25], default value = 1, integer): 
>starting-points â€“> 1


### Branch sets for RELAX analysis

>multiple-hits â€“> None

* Selected 80 branches as the _Reference_ set: `Suricata_suricatta, Hyaena_hyaena, Node1, Acinonyx_jubatus, Puma_concolor, Puma_yagouaroundi, Node10, Node8, Lynx_rufus, Lynx_canadensis, Node13, Node7, Prionailurus_bengalensis, Prionailurus_viverrinus, Node17, Felis_catus, Node16, Node6, Leopardus_geoffroyi, Node5, Neofelis_nebulosa, Panthera_tigris, Panthera_leo, Panthera_pardus, Node27, Panthera_uncia, Node26, Node24, Node22, Node4, Nyctereutes_procyonoides, Vulpes_vulpes, Vulpes_lagopus, Node35, Node33, Canis_lupus, Node32, Lutra_lutra, Enhydra_lutris, Node44, Lontra_canadensis, Node43, Mustela_putorius, Mustela_erminea, Node49, Neogale_vison, Node48, Node42, Meles_meles, Node41, Odobenus_rosmarus, Callorhinus_ursinus, Eumetopias_jubatus, Zalophus_californianus, Node59, Node57, Node55, Halichoerus_grypus, Phoca_vitulina, Node63, Leptonychotes_weddellii, Mirounga_leonina, Mirounga_angustirostris, Node69, Node67, Neomonachus_schauinslandi, Node66, Node62, Node54, Node40, Ailuropoda_melanoleuca, Ursus_thibetanus, Node76, Ursus_arctos, Ursus_maritimus, Node79, Node75, Node73, Node39, Node31`

* Selected 1 branches as the _Test_ set: `Ursus_americanus`
The number omega rate classes to include in the model (permissible range = [2,10], default value = 3, integer): 
>rates â€“> 3

>models â€“> All

>srv â€“> No


### Obtaining branch lengths and nucleotide substitution biases under the nucleotide GTR model

>kill-zero-lengths â€“> Yes

### Deleted 4 zero-length internal branches: `Node17, Node27, Node7, Node8`
* Log(L) = -5523.43, AIC-c = 11225.15 (89 estimated parameters)
* 1 partition. Total tree length by partition (subs/site)  0.643

### Obtaining the global omega estimate based on relative GTR branch lengths and nucleotide substitution biases
* Log(L) = -5293.72, AIC-c = 10774.37 (93 estimated parameters)
* 1 partition. Total tree length by partition (subs/site)  0.660
* non-synonymous/synonymous rate ratio for *Reference* =   0.2344
* non-synonymous/synonymous rate ratio for *Test* =   0.0000

### Improving branch lengths, nucleotide substitution biases, and global dN/dS ratios under a full codon model
* Log(L) = -5263.22, AIC-c = 10713.37 (93 estimated parameters)
* non-synonymous/synonymous rate ratio for *Reference* =   0.1857
* non-synonymous/synonymous rate ratio for *Test* =   0.0000

### Fitting the general descriptive (separate k per branch) model

### * Log(L) = -5210.17, AIC-c = 10769.53 (173 estimated parameters)
* The following baseline rate distribution for branch-site combinations was inferred

|          Selection mode           |     dN/dS     |Proportion, %|               Notes               |
|-----------------------------------|---------------|-------------|-----------------------------------|
|        Negative selection         |     0.000     |   92.029    |                                   |
|        Negative selection         |     0.630     |    7.896    |                                   |
|      Diversifying selection       |   1263.038    |    0.075    |                                   |

* Branch-level relaxation or intensification parameter distribution has mean  1.21, median  0.17, and 95% of the weight in  0.01 - 50.00

### Fitting the alternative model to test K != 1
* Log(L) = -5260.36, AIC-c = 10715.73 (97 estimated parameters)
* Relaxation/intensification parameter (K) =    50.00
* The following rate distribution was inferred for **test** branches

|          Selection mode           |     dN/dS     |Proportion, %|               Notes               |
|-----------------------------------|---------------|-------------|-----------------------------------|
|        Negative selection         |     0.000     |   71.415    |                                   |
|        Negative selection         |     0.000     |   28.585    |                                   |
|      Diversifying selection       |954970730712...|    0.000    |       Not supported by data       |

* The following rate distribution was inferred for **reference** branches

|          Selection mode           |     dN/dS     |Proportion, %|               Notes               |
|-----------------------------------|---------------|-------------|-----------------------------------|
|        Negative selection         |     0.012     |   71.415    |                                   |
|        Negative selection         |     0.646     |   28.585    |                                   |
|      Diversifying selection       |     2.752     |    0.000    |       Not supported by data       |


### * Potential convergence issues due to flat likelihood surfaces; checking to see whether K > 1 or K < 1 is robustly inferred
Error:
Insufficient number of arguments for a call to Operation - with 2 arguments while converting '0.01377370938377114|t|*|relax.test.theta_GT|*|0.0944390551518885|t|*|relax.test.theta_GT|*|relax.test.omega3|*|+|0.0944390551518885|-|t|*|relax.test.theta_GT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.0944390551518885|t|*|relax.test.theta_GT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.044898190211056|t|*|relax.test.theta_CT|*|+|0.0802151152215109|t|*|relax.test.theta_CT|*|relax.test.omega3|*|+|0.0802151152215109|-|t|*|relax.test.theta_CT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.0802151152215109|t|*|relax.test.theta_CT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.0542983652715845|t|*|relax.test.theta_CG|*|+|0.1174066335060729|t|*|relax.test.theta_CG|*|relax.test.omega3|*|+|0.1174066335060729|-|t|*|relax.test.theta_CG|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.1174066335060729|t|*|relax.test.theta_CG|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.002073938632603397|t|*|relax.test.theta_AT|*|+|0.1031442169382418|t|*|relax.test.theta_AT|*|relax.test.omega3|*|+|0.1031442169382418|-|t|*|relax.test.theta_AT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.1031442169382418|t|*|relax.test.theta_AT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.00893189201245994|t|*|relax.test.theta_AG|*|+|0.07338382639693186|t|*|relax.test.theta_AG|*|relax.test.omega3|*|+|0.07338382639693186|-|t|*|relax.test.theta_AG|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.07338382639693186|t|*|relax.test.theta_AG|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.01068598218342314|t|*|relax.test.theta_AC|*|+|0.07479065222199856|t|*|relax.test.theta_AC|*|relax.test.omega3|*|+|0.07479065222199856|-|t|*|relax.test.theta_AC|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.07479065222199856|t|*|relax.test.theta_AC|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.0944390551518885|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_GT|*|relax.test.omega3|*|+|0.0944390551518885|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_GT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.0944390551518885|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_GT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.0802151152215109|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_CT|*|relax.test.omega3|*|+|0.0802151152215109|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_CT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.0802151152215109|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_CT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.1174066335060729|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_CG|*|relax.test.omega3|*|+|0.1174066335060729|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_CG|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.1174066335060729|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_CG|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.1031442169382418|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_AT|*|relax.test.omega3|*|+|0.1031442169382418|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_AT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.1031442169382418|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_AT|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.07338382639693186|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_AG|*|relax.test.omega3|*|+|0.07338382639693186|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_AG|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.07338382639693186|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_AG|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.07479065222199856|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_AC|*|relax.test.omega3|*|+|0.07479065222199856|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_AC|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega3|*|+|0.07479065222199856|-|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.theta_AC|*|relax.test.bsrel_mixture_aux_1|*|relax.test.omega2|*|+|0.0944390551518885|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.omega1|*|relax.test.theta_GT|*|+|0.0802151152215109|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.omega1|*|relax.test.theta_CT|*|+|0.1174066335060729|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.omega1|*|relax.test.theta_CG|*|+|0.1031442169382418|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.omega1|*|relax.test.theta_AT|*|+|0.07338382639693186|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.omega1|*|relax.test.theta_AG|*|+|0.07479065222199856|t|*|relax.test.bsrel_mixture_aux_0|*|relax.test.omega1|*|relax.test.theta_AC|*|+|-|1.903014338068265e-13|-' to a parse tree

Function call stack
1 :  FindRoot(models.generic.SetBranchLength.t, (0.01377370938377114*t*relax.test.theta_GT+0.0944390551518885*t*relax.test.theta_GT*relax.test.omega3+(-0.0944390551518885)*t*relax.test.theta_GT*relax.test.bsrel_mixture_aux_1*relax.test.omega3+0.0944390551518885*t*relax.test.theta_GT*relax.test.bsrel_mixture_aux_1*relax.test.omega2+0.044898190211056*t*relax.test.theta_CT+0.0802151152215109*t*relax.test.theta_CT*relax.test.omega3+(-0.0802151152215109)*t*relax.test.theta_CT*relax.test.bsrel_mixture_aux_1*relax.test.omega3+0.0802151152215109*t*relax.test.theta_CT*relax.test.bsrel_mixture_aux_1*relax.test.omega2+0.0542983652715845*t*relax.test.theta_CG+0.1174066335060729*t*relax.test.theta_CG*relax.test.omega3+(-0.1174066335060729)*t*relax.test.theta_CG*relax.test.bsrel_mixture_aux_1*relax.test.omega3+0.1174066335060729*t*relax.test.theta_CG*relax.test.bsrel_mixture_aux_1*relax.test.omega2+0.002073938632603397*t*relax.test.theta_AT+0.1031442169382418*t*relax.test.theta_AT*relax.test.omega3+(-0.1031442169382418)*t*relax.test.theta_AT*relax.test.bsrel_mixture_aux_1*relax.test.omega3+0.1031442169382418*t*relax.test.theta_AT*relax.test.bsrel_mixture_aux_1*relax.test.omega2+0.00893189201245994*t*relax.test.theta_AG+0.07338382639693186*t*relax.test.theta_AG*relax.test.omega3+(-0.07338382639693186)*t*relax.test.theta_AG*relax.test.bsrel_mixture_aux_1*relax.test.omega3+0.07338382639693186*t*relax.test.theta_AG*relax.test.bsrel_mixture_aux_1*relax.test.omega2+0.01068598218342314*t*relax.test.theta_AC+0.07479065222199856*t*relax.test.theta_AC*relax.test.omega3+(-0.07479065222199856)*t*relax.test.theta_AC*relax.test.bsrel_mixture_aux_1*relax.test.omega3+0.07479065222199856*t*relax.test.theta_AC*relax.test.bsrel_mixture_aux_1*relax.test.omega2+(-0.0944390551518885)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_GT*relax.test.omega3+0.0944390551518885*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_GT*relax.test.bsrel_mixture_aux_1*relax.test.omega3+(-0.0944390551518885)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_GT*relax.test.bsrel_mixture_aux_1*relax.test.omega2+(-0.0802151152215109)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_CT*relax.test.omega3+0.0802151152215109*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_CT*relax.test.bsrel_mixture_aux_1*relax.test.omega3+(-0.0802151152215109)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_CT*relax.test.bsrel_mixture_aux_1*relax.test.omega2+(-0.1174066335060729)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_CG*relax.test.omega3+0.1174066335060729*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_CG*relax.test.bsrel_mixture_aux_1*relax.test.omega3+(-0.1174066335060729)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_CG*relax.test.bsrel_mixture_aux_1*relax.test.omega2+(-0.1031442169382418)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_AT*relax.test.omega3+0.1031442169382418*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_AT*relax.test.bsrel_mixture_aux_1*relax.test.omega3+(-0.1031442169382418)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_AT*relax.test.bsrel_mixture_aux_1*relax.test.omega2+(-0.07338382639693186)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_AG*relax.test.omega3+0.07338382639693186*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_AG*relax.test.bsrel_mixture_aux_1*relax.test.omega3+(-0.07338382639693186)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_AG*relax.test.bsrel_mixture_aux_1*relax.test.omega2+(-0.07479065222199856)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_AC*relax.test.omega3+0.07479065222199856*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_AC*relax.test.bsrel_mixture_aux_1*relax.test.omega3+(-0.07479065222199856)*t*relax.test.bsrel_mixture_aux_0*relax.test.theta_AC*relax.test.bsrel_mixture_aux_1*relax.test.omega2+0.0944390551518885*t*relax.test.bsrel_mixture_aux_0*relax.test.omega1*relax.test.theta_GT+0.0802151152215109*t*relax.test.bsrel_mixture_aux_0*relax.test.omega1*relax.test.theta_CT+0.1174066335060729*t*relax.test.bsrel_mixture_aux_0*relax.test.omega1*relax.test.theta_CG+0.1031442169382418*t*relax.test.bsrel_mixture_aux_0*relax.test.omega1*relax.test.theta_AT+0.07338382639693186*t*relax.test.bsrel_mixture_aux_0*relax.test.omega1*relax.test.theta_AG+0.07479065222199856*t*relax.test.bsrel_mixture_aux_0*relax.test.omega1*relax.test.theta_AC)--1.903014338068265e-13, t, 0, 10000);
-------
2 :  ExecuteCommands("FindRoot (models.generic.SetBranchLength.t,("+models.generic.SetBranchLength.expression+")-"+value+","+models.generic.SetBranchLength.bl+",0,10000)", /usr/local/share/hyphy/TemplateBatchFiles/libv3/models/);
-------
3 :  [namespace = TpYZXiLZ] Branch under condition 'Type(value)=="Number"'
	to
		<END EXECUTION>
	else
		<END EXECUTION>
-------
4 :  return Call(model[terms.model.set_branch_length],model,length,tree+"."+node);
-------
5 :  estimators.ApplyExistingEstimatesToTree.constraint_count+=estimators.applyBranchLength(_tree_name,_branch_name,model_descriptions[estimators.ApplyExistingEstimatesToTree.map[_branch_name]],_set_branch_length_to);
-------
6 :  estimators.ApplyExistingEstimates.df_correction+=estimators.ApplyExistingEstimatesToTree((estimators.ApplyExistingEstimates.lfInfo[terms.fit.trees])[estimators.ApplyExistingEstimates.i],model_descriptions,(initial_values[terms.branch_length])[estimators.ApplyExistingEstimates.i],_application_type,estimators.ApplyExistingEstimates.keep_track_of_proportional_scalers);
-------
7 :  [namespace = gQHsYhKE] df=estimators.ApplyExistingEstimates("`&likelihoodFunction`",model_objects,initial_values,run_options[utility.getGlobalValue("terms.run_options.proportional_branch_length_scaler")]);
-------
8 :  relax.alternative_model.fit.take2=estimators.FitLF(relax.filter_names,relax.trees,{"0":relax.model_map},relax.alternative_model.fit,relax.model_object_map,{terms.run_options.retain_lf_object:TRUE,terms.run_options.optimization_log:relax.optimization_log_file("MainALT-redo-log.json")});
-------
9 :  relax.FitMainTestPair();
-------

